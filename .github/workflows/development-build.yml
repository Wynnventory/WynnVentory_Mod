# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish Development Build

on:
  push:
    branches:
      - master

jobs:
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - run: |
          npm install conventional-changelog-conventionalcommits@7.0.2
          npm install conventional-recommended-bump@9.0.0

      - name: Set up version.json
        run: echo "{"version":$(git describe --tags --abbrev=0)}" > version.json

      - name: Create changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5.2.1
        with:
          pre-commit: ./.github/pre-commit.js
          config-file-path: ./.github/config.js
          version-file: ./version.json
          skip-version-file: true
          skip-git-pull: true
          pre-release: true
          pre-release-identifier: dev
          output-file: false
          
      - name: Upload build.gradle with replaced version
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.gradle
          overwrite: true
          
  build:
    name: Build
    needs: changelog
    runs-on: ubuntu-latest
    outputs:
      jarName: ${{ steps.make_unique.outputs.jar_name }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4 # Download version information from changelog
      with:
        name: build
  
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew shadowjar --stacktrace

    - name: Make filename unique
      id: make_unique
      run: |
        jar_name="WynnVentory-${{ needs.changelog.outputs.tag }}.jar"
        mv build/libs/*-shadow.jar build/libs/$jar_name
        echo "::set-output name=jar_name::$jar_name"

    - name: Upload JAR
      uses: actions/upload-artifact@v4
      with:
        path: build/libs/${{ steps.make_unique.outputs.jar_name }}
        name: ${{ steps.make_unique.outputs.jar_name }}
        if-no-files-found: error
        overwrite: true
  
  release-github:
    name: Release to Github
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    runs-on: ubuntu-latest
    needs: [ build, changelog ]

    steps:      
    - name: Download JAR
      id: download
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.jarName }}
        path: ${{ github.workspace }}
      
    - name: Create release and upload files
      if: ${{ needs.changelog.outputs.skipped != 'true' }}
      id: release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.changelog.outputs.tag }}
        body: ${{ needs.changelog.outputs.changelog }}
        draft: false
        prerelease: true
        files: ${{ github.workspace }}/${{ needs.build.outputs.jarName }}
