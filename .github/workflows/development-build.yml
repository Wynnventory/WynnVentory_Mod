name: Publish Development Build

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Create Release via Release Please
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release.outputs.tag_name }}
      changelog: ${{ steps.get-changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Ensure CHANGELOG.md exists
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            git add CHANGELOG.md
            git commit -m "chore: initialize CHANGELOG.md" || true
          fi
          
      - name: Release Please
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple    # only update CHANGELOG.md and tag
          prerelease: true
          prerelease-identifier: dev
          target-branch: master

      - name: Read Changelog
        id: get-changelog
        run: |
          CHANGELOG=$(sed -n '/^## \[.*\]/,$p' CHANGELOG.md)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "tag=${{ steps.release.outputs.tag_name }}" >> $GITHUB_OUTPUT

      - name: Update build.gradle
        run: |
          node -e "require('./.github/pre-commit').preCommit({ version: '${{ steps.release.outputs.tag_name }}', isPreRelease: true })"

      - name: Upload build.gradle
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.gradle
          overwrite: true

  build:
    name: Build JAR
    needs: release
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
    outputs:
      jarName: ${{ steps.make_unique.outputs.jar_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Download build.gradle
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew shadowjar --stacktrace

      - name: Make filename unique
        id: make_unique
        run: |
          jar_name="Wynnventory-${{ needs.release.outputs.tag }}.jar"
          mv build/libs/*-shadow.jar build/libs/$jar_name
          echo "::set-output name=jar_name::$jar_name"

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.make_unique.outputs.jar_name }}
          path: build/libs/${{ steps.make_unique.outputs.jar_name }}
          if-no-files-found: error
          overwrite: true

  notify:
    name: Post Release Notification
    needs: [release, build]
    runs-on: ubuntu-latest

    steps:
      - name: Set Current Date
        id: date
        run: |
          echo "short=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "long=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_OUTPUT

      - name: Post Release on Discord
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_DEV_RELEASE_WEBHOOK_URL }}
          embed-color: "9498256"
          embed-title: ${{ format('Wynnventory {0}', needs.release.outputs.tag) }}
          embed-description: ${{ needs.release.outputs.changelog }}
          embed-url: ${{ steps.release.outputs.html_url }}
          embed-timestamp: ${{ steps.date.outputs.long }}
