name: Publish Development Build

on:
  push:
    branches:
      - master

jobs:
  changelog:
    name: Generate Changelog & Bump Version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release_please.outputs.next_tag }}
      changelog: ${{ steps.release_please.outputs.changelog }}
    steps:
      - name: Checkout using bot token
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_PAT }}
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Bump & Changelog via Release Please
        id: release_please
        uses: googleapis/release-please-action@v4.2.0
        with:
          token: ${{ secrets.BOT_PAT }}
          release-type: node
          include-component-in-tag: false
          config-file: .github/release-please-config.json
          
      - name: Update build.gradle version
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const version = '${{ steps.release_please.outputs.next_tag }}'.replace(/^v/, '');
            let text = fs.readFileSync('build.gradle', 'utf8');
            text = text.replace(/(?<=version = ")\d+\.\d+\.\d+(-\w+\.\d+)?(?=")/, version);
            fs.writeFileSync('build.gradle', text);
            console.log('build.gradle updated to version', version);

      - name: Upload build.gradle with replaced version
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.gradle
          overwrite: true

  build:
    name: Build
    needs: changelog
    if: ${{ needs.changelog.outputs.tag != '' }}
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
    outputs:
      jarName: ${{ steps.make_unique.outputs.jar_name }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            $HOME/.gradle/caches
            $HOME/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-disabled: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew shadowjar --stacktrace

      - name: Make filename unique
        id: make_unique
        run: |
          jar_name="Wynnventory-v${{ needs.changelog.outputs.tag }}.jar"
          mv build/libs/*-shadow.jar build/libs/$jar_name
          echo "::set-output name=jar_name::$jar_name"

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          path: build/libs/${{ steps.make_unique.outputs.jar_name }}
          name: ${{ steps.make_unique.outputs.jar_name }}
          if-no-files-found: error
          overwrite: true

  release-github:
    name: Release to Github
    if: ${{ needs.changelog.outputs.tag != '' }}
    runs-on: ubuntu-latest
    needs: [ build, changelog ]
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.jarName }}
          path: ${{ github.workspace }}

      - name: Create release and upload files
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.changelog.outputs.tag }}
          body: ${{ needs.changelog.outputs.changelog }}
          draft: false
          prerelease: true
          files: ${{ github.workspace }}/${{ needs.build.outputs.jarName }}
          
      - name: Set current date
        id: date
        run: |
          echo "::set-output name=short::$(date +'%Y-%m-%d')"
          echo "::set-output name=long::$(date +'%Y-%m-%dT%H:%M:%SZ')"
          
      - name: Post release on Discord
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_DEV_RELEASE_WEBHOOK_URL }}
          embed-color: "9498256"
          embed-title: Wynnventory ${{ needs.changelog.outputs.tag }}
          embed-description: ${{ needs.changelog.outputs.changelog }}
          embed-url: ${{ steps.release.outputs.url }}
          embed-timestamp: ${{ steps.date.outputs.long }}
