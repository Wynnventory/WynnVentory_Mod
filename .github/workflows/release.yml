# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish Release

on:
  push:
    branches:
      - release

jobs:
  changelog:
    name: Generate Changelog and Bump Version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
      changelog: ${{ steps.changelog.outputs.clean_changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_PAT }}
          fetch-depth: 0
          
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: |
          npm install conventional-changelog-conventionalcommits@7.0.2
          npm install conventional-recommended-bump@11.1.0

      - name: Set up package.json
        run: |
          TAG=$(git describe --tags --abbrev=0)
          printf '{\n  "version": "%s"\n}\n' "$TAG" > package.json

      - name: Create changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6
        with:
          github-token: '${{ secrets.BOT_PAT }}'
          pre-commit: ./.github/pre-commit.js
          config-file-path: ./.github/config.js
          skip-git-pull: true
          pre-release: false
          pre-release-identifier: dev

      - name: Upload build.gradle with replaced version
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.gradle
          overwrite: true

  build:
    name: Build
    needs: changelog
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
    outputs:
      jarName: ${{ steps.make_unique.outputs.jar_name }}

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.BOT_PAT }}
        fetch-depth: 0

    - uses: actions/download-artifact@v4 # Download version information from changelog
      with:
        name: build

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-disabled: true

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew shadowjar

    - name: Make filename unique
      id: make_unique
      run: |
        jar_name="Wynnventory-${{ needs.changelog.outputs.tag }}.jar"
        mv build/libs/*-shadow.jar build/libs/$jar_name
        echo "::set-output name=jar_name::$jar_name"

    - name: Upload JAR
      uses: actions/upload-artifact@v4
      with:
        path: build/libs/${{ steps.make_unique.outputs.jar_name }}
        name: ${{ steps.make_unique.outputs.jar_name }}
        if-no-files-found: error
        overwrite: true

  release-github:
    name: Release to Github
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    runs-on: ubuntu-latest
    needs: [ changelog, build ]

    steps:      
    - name: Download JAR
      id: download
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.jarName }}
        path: ${{ github.workspace }}

    - name: Create release and upload files
      id: release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.changelog.outputs.tag }}
        body: ${{ needs.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        files: ${{ github.workspace }}/${{ needs.build.outputs.jarName }}

    - name: Set current timestamp
      id: date
      run: |
        # Use UTC so you get a Z suffix
        ts=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        echo "timestamp=$ts" >> $GITHUB_OUTPUT
        
    - name: Post release on Discord
      uses: tsickert/discord-webhook@v7.0.0
      with:
       webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
       embed-color: "9498256"
       embed-title: ${{format('Wynnventory {0}', needs.changelog.outputs.tag)}}
       embed-description: ${{ needs.changelog.outputs.changelog }}
       embed-url: ${{ steps.release.outputs.url }}
       embed-timestamp:    ${{ steps.date.outputs.timestamp }}

  release-external:
    name: Release to Modrinth and Curseforge
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    needs: [changelog, build]
    runs-on: ubuntu-latest

    steps:
     - name: Download JAR from build
       id: download
       uses: actions/download-artifact@v4
       with:
         name: ${{ needs.build.outputs.jarName }}
         path: ${{ github.workspace }}

     - uses: Kir-Antipov/mc-publish@v3.3.0
       with:
         modrinth-id: CORVJbiT
         modrinth-featured: true
         modrinth-unfeature-mode: subset
         modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
  
         curseforge-id: 1083173
         curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
  
         files: ${{ github.workspace }}/${{ needs.build.outputs.jarName }}
  
         name: Wynnventory ${{ needs.changelog.outputs.tag }}
         version: ${{ needs.changelog.outputs.tag }}
         version-type: release
         changelog: ${{ needs.changelog.outputs.changelog }}
  
         game-versions: |
           [1.21.4]
         loaders: fabric
         java: 21

  sync-master:
      name: "Sync master with release branch after version bump"
      needs: changelog
      if: ${{ needs.changelog.outputs.skipped != 'true' }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout release branch
          uses: actions/checkout@v4
          with:
            ref: release
            fetch-depth: 0
            token: ${{ secrets.BOT_PAT }}
  
        - name: Pull Changes
          run: git pull
  
        - name: Checkout master branch
          run: git checkout master
  
        - name: Merge release branch into master after version bump [skip ci]
          run: |
            git config --global user.email "wynnventory@gmail.com"
            git config --global user.name "Wynnventory (Bot)"
            git merge release --no-ff -m "chore(release): Merge release branch into master after version bump [skip ci]"
            git push origin master