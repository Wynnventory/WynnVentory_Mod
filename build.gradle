plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id "com.github.johnrengelman.shadow" version "8.1.1"
}

version = "0.2.5"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.parchmentmc.org/" }
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = "https://libraries.minecraft.net/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${parchment_version}@zip")
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation files('libs/wynntils-2.0.3-fabric+MC-1.21.jar')

	modRuntimeOnly "me.djtheredstoner:DevAuth-fabric:1.2.1"


	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.17.2'
}

configurations {
	resolvableImplementation {
		canBeResolved = true
		canBeConsumed = false
		extendsFrom implementation
	}
}

processResources {
	var replaceProperties = [
	java_version		: java_version,
	mod_id			: mod_id,
	mod_version		: project.version,
	minecraft_version_range	: minecraft_version_range,
	loader_version		: loader_version,
	wynntils_version	: wynntils_version
	]
	inputs.properties replaceProperties
	
	filesMatching("fabric.mod.json") {
	expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

remapJar {
	dependsOn jar

	archiveClassifier.set('remapped')
	inputFile = jar.archiveFile.get().asFile
	sourceNamespace = "named"
	targetNamespace = "intermediary"
}

shadowJar {
	dependsOn remapJar

	from {
		zipTree(remapJar.archiveFile.get().asFile)
	}

	archiveClassifier.set('shadow')
	//relocate 'com.fasterxml.jackson', 'com.wynnventory.shadow.jackson'
	configurations = [project.configurations.resolvableImplementation]
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
			artifact shadowJar.archiveFile.get()
		}
	}

	repositories {
		maven {
			url "file:///${project.projectDir}/mcmodsrepo"
		}
	}
}

build {
	dependsOn shadowJar
}
